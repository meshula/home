

# Path to your oh-my-zsh installation.
export ZSH=/Users/nporcino/.oh-my-zsh

DEFAULT_USER=nporcino

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="agnoster"

# theme.sh flat

# determine current operating system & local build directories
#################################################################
if [[ -v WSL_DISTRO_NAME ]]; then
    export OS_WINDOWS=1
fi

export SW_ROOT_EXTERNAL_base="${HOME}/sw.external"
export OS=`uname`
if [[ -v OS_WINDOWS ]]; then 
    export OS="WSL"
fi

# Set up the operating system
case $OS in
    "Darwin" )
        # the first cut results in 10.6.1 and the second cut removes
        # the `.1' to wind up with 10.6.1
        export OS_VERSION=`sw_vers | grep ProductVersion | grep -Eo '[0-9][0-9]\.[0-9]'`; 
        ;;
    "WSL" )
        export WORKSPACE=${HOME}/workspace
        export OS_VERSION="x86_64";
        ;;
    "Linux" )
        export OS_VERSION="x86_64";
        ;;
    "Default" )
        export OS_VERSION="DEFAULT";
        echo "warning: couldn't find a OS for you...";
        ;;
esac

# SYSTEM VARIABLES
export OS_SUFFIX="${OS}/${OS_VERSION}"
export PREFIX="${SW_ROOT_EXTERNAL_base}/${OS_SUFFIX}"
export PYTHON_VERSION=`python --version 2>&1 | cut -f 2 -d ' ' | cut -f -2 -d '.'`
export PYTHONSTARTUP="${HOME}/workspace/dotfiles/.pystartup"

# Set OS specific variables.
case $OS in
    "Darwin" )
        export JOBS=10;

        # l seems to have some platform dependent quirks
        alias l='ls -lGh'   # list with prettyness

        export CXX='clang++'
        export CC='clang'

        # make sure that the backspace is sent through correctly
        # infocmp $TERM | sed 's/kbs=^[hH]/kbs=\\177/' > /var/tmp/$TERM.ti
        # tic /var/tmp/$TERM.ti
        # rm /var/tmp/$TERM.ti

        export PATH="/Users/nporcino/.cargo/bin:/Users/nporcino/bin:/usr/bin:$PATH:/usr/local/bin"
        export PATH="$HOME/miniconda3/bin:$PATH"

        source "$HOME/miniconda/bin/activate"
        ;;

    "Linux" )
        # going to assume 64 bit for now
        export JOBS=9;
        alias l='ls -lGh --color=auto'  # list with prettyness
        alias w_ubuntu='cat /etc/issue'
        export VIMFONT="Monospace" # set the vim font
        alias wsteam='wine ~/.wine/drive_c/Program\ Files/Steam/Steam.exe'
        ;;

    "WSL")
        export BLDDIR=/var/tmp/build
        alias l='ls -lGh --color=auto'  # list with prettyness
        alias gitk='gitk.exe --all' # use the windows gitk in `--all` mode
        
        # @TODO: probably better to use ${USER} for stephan/steinbach to make
        #        it more uniform from machine to machine
        alias wh='pushd /mnt/c/Users/${USER}/'
        export WINHOME='/mnt/c/Users/${USER}/'

        export PATH=${PATH}:/home/${USER}/.local/bin

        # Make sure that the ssh-agent is running for WSL
        if [ $(ps ax | grep "[s]sh-agent" | wc -l) -eq 0 ] ; then
            eval $(ssh-agent -s) > /dev/null
            if [ "$(ssh-add -l)" = "The agent has no identities." ] ; then
                # Auto-add ssh keys to your ssh agent
                # Example:
                ssh-add ~/.ssh/id_rsa #> /dev/null 2>&1
            fi
        fi

        # so that we use the faster git system install from windows
        # export GIT_EXEC_PATH="/mnt/c/Users/steinbach/AppData/Local/Programs/Git/cmd"
        ;;

    "Default" )
        export OS_VERSION="DEFAULT"
        echo "warning: couldn't find a OS for you..."
esac

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git python pip github zsh-syntax-highlighting)

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# enable vim hotkeys in zsh
set -o vi
bindkey -v
function zle-line-init zle-keymap-select {
    VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
    zle reset-prompt
}
zle -N zle-line-init



# Compilation flags
# export ARCHFLAGS="-arch x86_64"

##############################################################################
# History Configuration
##############################################################################
# @{ history settings
export HISTSIZE=1000000               #How many lines of history to keep in memory
export HISTFILE=~/.zsh_history     #Where to save history to disk
export SAVEHIST=1000000               #Number of history entries to save to disk
export HISTFILESIZE=10000000
#HISTDUP=erase               #Erase duplicates in the history file
setopt    appendhistory     #Append history to the history file (no overwriting)
setopt    sharehistory      #Share history across terminals
setopt    incappendhistory  #Immediately append to the history file, not just when a term is killed
set histignorespace true
# @}

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias mk='make "$@" 2>&1 | less'
alias h='history 1 | grep $@'
# alias ll='lsd -al'
# alias ls='lsd'
alias xcmake='cmake -DCMAKE_INSTALL_PREFIX=./install -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -G "Xcode"'

#eval "$(starship init zsh)"
eval `ssh-agent`
autoload -U +X bashcompinit && bashcompinit

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
source ~/.oh-my-zsh/custom/themes/powerlevel10k/powerlevel10k.zsh-theme 2>/dev/null || echo "Powerlevel10k theme not found"
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

